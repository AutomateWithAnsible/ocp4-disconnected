apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |2-

      [
          {
              "apiVersion": "ocs.openshift.io/v1",
              "kind": "StorageCluster",
              "metadata": {
                  "name": "example-storagecluster",
                  "namespace": "openshift-storage"
              },
              "spec": {
                  "manageNodes": false,
                  "monPVCTemplate": {
                      "spec": {
                          "accessModes": [
                              "ReadWriteOnce"
                          ],
                          "resources": {
                              "requests": {
                                  "storage": "10Gi"
                              }
                          },
                          "storageClassName": "gp2"
                      }
                  },
                  "storageDeviceSets": [
                      {
                          "count": 3,
                          "dataPVCTemplate": {
                              "spec": {
                                  "accessModes": [
                                      "ReadWriteOnce"
                                  ],
                                  "resources": {
                                      "requests": {
                                          "storage": "1Ti"
                                      }
                                  },
                                  "storageClassName": "gp2",
                                  "volumeMode": "Block"
                              }
                          },
                          "name": "example-deviceset",
                          "placement": {},
                          "portable": true,
                          "resources": {}
                      }
                  ]
              }
          }
      ]
    capabilities: Full Lifecycle
    categories: Storage
    containerImage: quay.io/ocs-dev/ocs-operator:4.5.0
    createdAt: "2020-11-02 11:41:30"
    description: Red Hat OpenShift Container Storage provides hyperconverged storage
      for applications within an OpenShift cluster.
    external.features.ocs.openshift.io/export-script: |-
      JycnCkNvcHlyaWdodCAyMDIwIFRoZSBSb29rIEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQu
      CgpMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxp
      Y2Vuc2UiKTsKeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3
      aXRoIHRoZSBMaWNlbnNlLgpZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQK
      CglodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKClVubGVzcyByZXF1
      aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUK
      ZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElT
      IiBCQVNJUywKV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVp
      dGhlciBleHByZXNzIG9yIGltcGxpZWQuClNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmlj
      IGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKbGltaXRhdGlvbnMgdW5kZXIgdGhl
      IExpY2Vuc2UuCicnJwoKaW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgYXJncGFyc2UKaW1w
      b3J0IHVuaXR0ZXN0CmltcG9ydCByZQppbXBvcnQgcmVxdWVzdHMKZnJvbSBvcyBpbXBvcnQgbGlu
      ZXNlcCBhcyBMSU5FU0VQCgojIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgd2l0aCAyLngKdHJ5Ogog
      ICAgTW9kdWxlTm90Rm91bmRFcnJvcgpleGNlcHQ6CiAgICBNb2R1bGVOb3RGb3VuZEVycm9yID0g
      SW1wb3J0RXJyb3IKCnRyeToKICAgIGltcG9ydCByYWRvcwpleGNlcHQgTW9kdWxlTm90Rm91bmRF
      cnJvciBhcyBub01vZEVycjoKICAgIHByaW50KCJFcnJvcjogJXNcbkV4aXRpbmcgdGhlIHNjcmlw
      dC4uLiIgJSBub01vZEVycikKICAgIHN5cy5leGl0KDEpCgp0cnk6CiAgICAjIGZvciAyLjcueAog
      ICAgZnJvbSBTdHJpbmdJTyBpbXBvcnQgU3RyaW5nSU8KZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJy
      b3I6CiAgICAjIGZvciAzLngKICAgIGZyb20gaW8gaW1wb3J0IFN0cmluZ0lPCgoKY2xhc3MgRXhl
      Y3V0aW9uRmFpbHVyZUV4Y2VwdGlvbihFeGNlcHRpb24pOgogICAgcGFzcwoKCmNsYXNzIFJhZG9z
      SlNPTjoKICAgIEVYVEVSTkFMX1VTRVJfTkFNRSA9ICJjbGllbnQuaGVhbHRoY2hlY2tlciIKICAg
      IEVNUFRZX09VVFBVVF9MSVNUID0gIkVtcHR5IG91dHB1dCBsaXN0IgoKICAgIEBjbGFzc21ldGhv
      ZAogICAgZGVmIGdlbl9hcmdfcGFyc2VyKGNscywgYXJnc190b19wYXJzZT1Ob25lKToKICAgICAg
      ICBhcmdQID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQogICAgICAgIGFyZ1AuYWRkX2FyZ3Vt
      ZW50KCItLXZlcmJvc2UiLCAiLXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbj0n
      c3RvcmVfdHJ1ZScsIGRlZmF1bHQ9RmFsc2UpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQoIi0t
      Y2VwaC1jb25mIiwgIi1jIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJQcm92aWRl
      IGEgY2VwaCBjb25mIGZpbGUuIiwgdHlwZT1zdHIpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQo
      Ii0tcnVuLWFzLXVzZXIiLCAiLXUiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlBy
      b3ZpZGVzIGEgdXNlciBuYW1lIHRvIGNoZWNrIHRoZSBjbHVzdGVyJ3MgaGVhbHRoIHN0YXR1cywg
      bXVzdCBiZSBwcmVmaXhlZCBieSAnY2xpZW50LiciLAogICAgICAgICAgICAgICAgICAgICAgICAg
      IGRlZmF1bHQ9Y2xzLkVYVEVSTkFMX1VTRVJfTkFNRSwgdHlwZT1zdHIpCiAgICAgICAgYXJnUC5h
      ZGRfYXJndW1lbnQoIi0tZm9ybWF0IiwgIi10IiwgY2hvaWNlcz1bImpzb24iLCAiYmFzaCJdLAog
      ICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ9J2pzb24nLCBoZWxwPSJQcm92aWRlcyB0
      aGUgb3V0cHV0IGZvcm1hdCAoanNvbiB8IGJhc2gpIikKICAgICAgICBhcmdQLmFkZF9hcmd1bWVu
      dCgiLS1jbHVzdGVyLW5hbWUiLCBkZWZhdWx0PSJvcGVuc2hpZnQtc3RvcmFnZSIsCiAgICAgICAg
      ICAgICAgICAgICAgICAgICAgaGVscD0iQ2VwaCBjbHVzdGVyIG5hbWUiKQogICAgICAgIGFyZ1Au
      YWRkX2FyZ3VtZW50KCItLW91dHB1dCIsICItbyIsIGRlZmF1bHQ9IiIsCiAgICAgICAgICAgICAg
      ICAgICAgICAgICAgaGVscD0iT3V0cHV0IHdpbGwgYmUgc3RvcmVkIGludG8gdGhlIHByb3ZpZGVk
      IGZpbGUiKQogICAgICAgIGFyZ1AuYWRkX2FyZ3VtZW50KCItLWNlcGhmcy1maWxlc3lzdGVtLW5h
      bWUiLCBkZWZhdWx0PSIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlByb3ZpZGVz
      IHRoZSBuYW1lIG9mIHRoZSBDZXBoIGZpbGVzeXN0ZW0iKQogICAgICAgIGFyZ1AuYWRkX2FyZ3Vt
      ZW50KCItLWNlcGhmcy1kYXRhLXBvb2wtbmFtZSIsIGRlZmF1bHQ9IiIsCiAgICAgICAgICAgICAg
      ICAgICAgICAgICAgaGVscD0iUHJvdmlkZXMgdGhlIG5hbWUgb2YgdGhlIGNlcGhmcyBkYXRhIHBv
      b2wiKQogICAgICAgIGFyZ1AuYWRkX2FyZ3VtZW50KCItLXJiZC1kYXRhLXBvb2wtbmFtZSIsIGRl
      ZmF1bHQ9IiIsIHJlcXVpcmVkPVRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0i
      UHJvdmlkZXMgdGhlIG5hbWUgb2YgdGhlIFJCRCBkYXRhcG9vbCIpCiAgICAgICAgYXJnUC5hZGRf
      YXJndW1lbnQoIi0tbmFtZXNwYWNlIiwgZGVmYXVsdD0iIiwKICAgICAgICAgICAgICAgICAgICAg
      ICAgICBoZWxwPSJOYW1lc3BhY2Ugd2hlcmUgQ2VwaENsdXN0ZXIgaXMgcnVubmluZyIpCiAgICAg
      ICAgYXJnUC5hZGRfYXJndW1lbnQoIi0tcmd3LXBvb2wtcHJlZml4IiwgZGVmYXVsdD0iZGVmYXVs
      dCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iUkdXIFBvb2wgcHJlZml4IikKICAg
      ICAgICBhcmdQLmFkZF9hcmd1bWVudCgiLS1yZ3ctZW5kcG9pbnQiLCBkZWZhdWx0PSIiLCByZXF1
      aXJlZD1GYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJSYWRvcyBHYXRlV2F5
      IGVuZHBvaW50IChpbiA8SVA+OjxQT1JUPiBmb3JtYXQpIikKICAgICAgICBpZiBhcmdzX3RvX3Bh
      cnNlOgogICAgICAgICAgICBhc3NlcnQgdHlwZShhcmdzX3RvX3BhcnNlKSA9PSBsaXN0LCBcCiAg
      ICAgICAgICAgICAgICAiQXJndW1lbnQgdG8gJ2dlbl9hcmdfcGFyc2VyJyBzaG91bGQgYmUgYSBs
      aXN0IgogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGFyZ3NfdG9fcGFyc2UgPSBzeXMuYXJndlsx
      Ol0KICAgICAgICByZXR1cm4gYXJnUC5wYXJzZV9hcmdzKGFyZ3NfdG9fcGFyc2UpCgogICAgZGVm
      IF9pbnZhbGlkX2VuZHBvaW50KHNlbGYsIGVuZHBvaW50X3N0cik6CiAgICAgICAgdHJ5OgogICAg
      ICAgICAgICBpcHY0LCBwb3J0ID0gZW5kcG9pbnRfc3RyLnNwbGl0KCc6JykKICAgICAgICBleGNl
      cHQgVmFsdWVFcnJvcjoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlv
      bigKICAgICAgICAgICAgICAgICJOb3QgYSBwcm9wZXIgZW5kcG9pbnQ6IHt9LCA8SVA+OjxQT1JU
      PiwgZm9ybWF0IGlzIGV4cGVjdGVkIi5mb3JtYXQoZW5kcG9pbnRfc3RyKSkKICAgICAgICBpcFBh
      cnRzID0gaXB2NC5zcGxpdCgnLicpCiAgICAgICAgaWYgbGVuKGlwUGFydHMpICE9IDQ6CiAgICAg
      ICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAi
      Tm90IGEgdmFsaWQgSVAgYWRkcmVzczoge30iLmZvcm1hdChpcHY0KSkKICAgICAgICBmb3IgZWFj
      aFBhcnQgaW4gaXBQYXJ0czoKICAgICAgICAgICAgaWYgbm90IGVhY2hQYXJ0LmlzZGlnaXQoKToK
      ICAgICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAg
      ICAgICAgICAgICAgIklQIGFkZHJlc3MgcGFydHMgc2hvdWxkIGJlIG51bWJlcnM6IHt9Ii5mb3Jt
      YXQoaXB2NCkpCiAgICAgICAgICAgIGludFBhcnQgPSBpbnQoZWFjaFBhcnQpCiAgICAgICAgICAg
      IGlmIGludFBhcnQgPCAwIG9yIGludFBhcnQgPiAyNTQ6CiAgICAgICAgICAgICAgICByYWlzZSBF
      eGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAgICJPdXQgb2YgcmFu
      Z2UgSVAgYWRkcmVzc2VzOiB7fSIuZm9ybWF0KGlwdjQpKQogICAgICAgIGlmIG5vdCBwb3J0Lmlz
      ZGlnaXQoKToKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigiUG9y
      dCBub3QgdmFsaWQ6IHt9Ii5mb3JtYXQocG9ydCkpCiAgICAgICAgaW50UG9ydCA9IGludChwb3J0
      KQogICAgICAgIGlmIGludFBvcnQgPCAxIG9yIGludFBvcnQgPiAyKioxNi0xOgogICAgICAgICAg
      ICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIk91dCBv
      ZiByYW5nZSBwb3J0IG51bWJlcjoge30iLmZvcm1hdChwb3J0KSkKICAgICAgICByZXR1cm4gRmFs
      c2UKCiAgICBkZWYgZW5kcG9pbnRfZGlhbChzZWxmLCBlbmRwb2ludF9zdHIpOgogICAgICAgIHRy
      eToKICAgICAgICAgICAgZXAgPSAiaHR0cDovLyIgKyBlbmRwb2ludF9zdHIKICAgICAgICAgICAg
      ciA9IHJlcXVlc3RzLmhlYWQoZXApCiAgICAgICAgICAgIHJjID0gci5zdGF0dXNfY29kZQogICAg
      ICAgICAgICBpZiByYyAhPSAyMDA6CiAgICAgICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWls
      dXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAgICJ3cm9uZyByZXR1cm4gY29kZSB7fSBv
      biByZ3cgZW5kcG9pbnQgaHR0cCBoZWFkZXIgcmVxdWVzdCIuZm9ybWF0KHJjKSkKICAgICAgICBl
      eGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgICAgICByYWlzZSBFeGVjdXRp
      b25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgImZhaWxlZCB0byBjb25uZWN0IHRv
      IHJndyBlbmRwb2ludCB7fSIuZm9ybWF0KGVwKSkKCiAgICBkZWYgX19pbml0X18oc2VsZiwgYXJn
      X2xpc3Q9Tm9uZSk6CiAgICAgICAgc2VsZi5vdXRfbWFwID0ge30KICAgICAgICBzZWxmLl9leGNs
      dWRlZF9rZXlzID0gc2V0KCkKICAgICAgICBzZWxmLl9hcmdfcGFyc2VyID0gc2VsZi5nZW5fYXJn
      X3BhcnNlcihhcmdzX3RvX3BhcnNlPWFyZ19saXN0KQogICAgICAgIHNlbGYub3V0cHV0X2ZpbGUg
      PSBzZWxmLl9hcmdfcGFyc2VyLm91dHB1dAogICAgICAgIHNlbGYuY2VwaF9jb25mID0gc2VsZi5f
      YXJnX3BhcnNlci5jZXBoX2NvbmYKICAgICAgICBzZWxmLnJ1bl9hc191c2VyID0gc2VsZi5fYXJn
      X3BhcnNlci5ydW5fYXNfdXNlcgogICAgICAgIGlmIG5vdCBzZWxmLnJ1bl9hc191c2VyOgogICAg
      ICAgICAgICBzZWxmLnJ1bl9hc191c2VyID0gc2VsZi5FWFRFUk5BTF9VU0VSX05BTUUKICAgICAg
      ICBpZiBzZWxmLmNlcGhfY29uZjoKICAgICAgICAgICAgc2VsZi5jbHVzdGVyID0gcmFkb3MuUmFk
      b3MoY29uZmZpbGU9c2VsZi5jZXBoX2NvbmYpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2Vs
      Zi5jbHVzdGVyID0gcmFkb3MuUmFkb3MoKQogICAgICAgICAgICBzZWxmLmNsdXN0ZXIuY29uZl9y
      ZWFkX2ZpbGUoKQogICAgICAgIHNlbGYuY2x1c3Rlci5jb25uZWN0KCkKCiAgICBkZWYgc2h1dGRv
      d24oc2VsZik6CiAgICAgICAgaWYgc2VsZi5jbHVzdGVyLnN0YXRlID09ICJjb25uZWN0ZWQiOgog
      ICAgICAgICAgICBzZWxmLmNsdXN0ZXIuc2h1dGRvd24oKQoKICAgIGRlZiBnZXRfZnNpZChzZWxm
      KToKICAgICAgICByZXR1cm4gc3RyKHNlbGYuY2x1c3Rlci5nZXRfZnNpZCgpKQoKICAgIGRlZiBf
      Y29tbW9uX2NtZF9qc29uX2dlbihzZWxmLCBjbWRfanNvbik6CiAgICAgICAgY21kID0ganNvbi5k
      dW1wcyhjbWRfanNvbiwgc29ydF9rZXlzPVRydWUpCiAgICAgICAgcmV0X3ZhbCwgY21kX291dCwg
      ZXJyX21zZyA9IHNlbGYuY2x1c3Rlci5tb25fY29tbWFuZChjbWQsIGInJykKICAgICAgICBpZiBz
      ZWxmLl9hcmdfcGFyc2VyLnZlcmJvc2U6CiAgICAgICAgICAgIHByaW50KCJDb21tYW5kIElucHV0
      OiB7fSIuZm9ybWF0KGNtZCkpCiAgICAgICAgICAgIHByaW50KCJSZXR1cm4gVmFsOiB7fVxuQ29t
      bWFuZCBPdXRwdXQ6IHt9XG5FcnJvciBNZXNzYWdlOiB7fVxuLS0tLS0tLS0tLVxuIi5mb3JtYXQo
      CiAgICAgICAgICAgICAgICAgIHJldF92YWwsIGNtZF9vdXQsIGVycl9tc2cpKQogICAgICAgIGpz
      b25fb3V0ID0ge30KICAgICAgICBpZiByZXRfdmFsID09IDA6CiAgICAgICAgICAgIGpzb25fb3V0
      ID0ganNvbi5sb2FkcyhjbWRfb3V0KQogICAgICAgIHJldHVybiByZXRfdmFsLCBqc29uX291dCwg
      ZXJyX21zZwoKICAgIGRlZiBnZXRfY2VwaF9leHRlcm5hbF9tb25fZGF0YShzZWxmKToKICAgICAg
      ICBjbWRfanNvbiA9IHsicHJlZml4IjogInF1b3J1bV9zdGF0dXMiLCAiZm9ybWF0IjogImpzb24i
      fQogICAgICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2NtZF9q
      c29uX2dlbihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBh
      dHRlbXB0LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAg
      ICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAg
      ICAiJ3F1b3J1bV9zdGF0dXMnIGNvbW1hbmQgZmFpbGVkLlxuIiArCiAgICAgICAgICAgICAgICAi
      RXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9IDAgZWxzZSBzZWxmLkVNUFRZ
      X09VVFBVVF9MSVNUKSkKICAgICAgICBxX2xlYWRlcl9uYW1lID0ganNvbl9vdXRbJ3F1b3J1bV9s
      ZWFkZXJfbmFtZSddCiAgICAgICAgcV9sZWFkZXJfZGV0YWlscyA9IHt9CiAgICAgICAgcV9sZWFk
      ZXJfbWF0Y2hpbmdfbGlzdCA9IFtsIGZvciBsIGluIGpzb25fb3V0Wydtb25tYXAnXVsnbW9ucydd
      CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBsWyduYW1lJ10gPT0gcV9sZWFk
      ZXJfbmFtZV0KICAgICAgICBpZiBsZW4ocV9sZWFkZXJfbWF0Y2hpbmdfbGlzdCkgPT0gMDoKICAg
      ICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigiTm8gbWF0Y2hpbmcgJ21v
      bicgZGV0YWlscyBmb3VuZCIpCiAgICAgICAgcV9sZWFkZXJfZGV0YWlscyA9IHFfbGVhZGVyX21h
      dGNoaW5nX2xpc3RbMF0KICAgICAgICBpcF9wb3J0ID0gc3RyKHFfbGVhZGVyX2RldGFpbHNbJ3B1
      YmxpY19hZGRyJ10uc3BsaXQoJy8nKVswXSkKICAgICAgICByZXR1cm4gInt9PXt9Ii5mb3JtYXQo
      c3RyKHFfbGVhZGVyX25hbWUpLCBpcF9wb3J0KQoKICAgIGRlZiBjcmVhdGVfY2VwaENTSUtleXJp
      bmdfY2VwaEZTUHJvdmlzaW9uZXIoc2VsZik6CiAgICAgICAgJycnCiAgICAgICAgY29tbWFuZDog
      Y2VwaCBhdXRoIGdldC1vci1jcmVhdGUgY2xpZW50LmNzaS1jZXBoZnMtcHJvdmlzaW9uZXIgbW9u
      ICdhbGxvdyByJyBtZ3IgJ2FsbG93IHJ3JyBvc2QgJ2FsbG93IHJ3IHRhZyBjZXBoZnMgbWV0YWRh
      dGE9KicKICAgICAgICAnJycKICAgICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0
      LW9yLWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAgICAgImVudGl0eSI6ICJjbGllbnQuY3NpLWNl
      cGhmcy1wcm92aXNpb25lciIsCiAgICAgICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJh
      bGxvdyByIiwgIm1nciIsICJhbGxvdyBydyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      Im9zZCIsICJhbGxvdyBydyB0YWcgY2VwaGZzIG1ldGFkYXRhPSoiXSwKICAgICAgICAgICAgICAg
      ICAgICAiZm9ybWF0IjogImpzb24ifQogICAgICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNn
      ID0gc2VsZi5fY29tbW9uX2NtZF9qc29uX2dlbihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJl
      IGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBs
      ZW4oanNvbl9vdXQpID09IDA6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNl
      cHRpb24oCiAgICAgICAgICAgICAgICAiJ2F1dGggZ2V0LW9yLWNyZWF0ZSBjbGllbnQuY3NpLWNl
      cGhmcy1wcm92aXNpb25lcicgY29tbWFuZCBmYWlsZWQuXG4iICsKICAgICAgICAgICAgICAgICJF
      cnJvcjoge30iLmZvcm1hdChlcnJfbXNnIGlmIHJldF92YWwgIT0gMCBlbHNlIHNlbGYuRU1QVFlf
      T1VUUFVUX0xJU1QpKQogICAgICAgIHJldHVybiBzdHIoanNvbl9vdXRbMF1bJ2tleSddKQoKICAg
      IGRlZiBjcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTTm9kZShzZWxmKToKICAgICAgICBjbWRf
      anNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAg
      ICAgImVudGl0eSI6ICJjbGllbnQuY3NpLWNlcGhmcy1ub2RlIiwKICAgICAgICAgICAgICAgICAg
      ICAiY2FwcyI6IFsibW9uIiwgImFsbG93IHIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICJtZ3IiLCAiYWxsb3cgcnciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvc2QiLCAi
      YWxsb3cgcncgdGFnIGNlcGhmcyAqPSoiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJt
      ZHMiLCAiYWxsb3cgcnciXSwKICAgICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImpzb24ifQog
      ICAgICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2NtZF9qc29u
      X2dlbihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRl
      bXB0LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAgICAg
      ICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAi
      J2F1dGggZ2V0LW9yLWNyZWF0ZSBjbGllbnQuY3NpLWNlcGhmcy1ub2RlJyBjb21tYW5kIGZhaWxl
      ZC5cbiIgKwogICAgICAgICAgICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0
      X3ZhbCAhPSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgcmV0dXJuIHN0
      cihqc29uX291dFswXVsna2V5J10pCgogICAgZGVmIGNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19SQkRQ
      cm92aXNpb25lcihzZWxmKToKICAgICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0
      LW9yLWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAgICAgImVudGl0eSI6ICJjbGllbnQuY3NpLXJi
      ZC1wcm92aXNpb25lciIsCiAgICAgICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJwcm9m
      aWxlIHJiZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1nciIsICJhbGxvdyBydyIs
      CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm9zZCIsICJwcm9maWxlIHJiZCJdLAogICAg
      ICAgICAgICAgICAgICAgICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9v
      dXQsIGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAg
      ICMgaWYgdGhlcmUgaXMgYW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3Zh
      bCAhPSAwIG9yIGxlbihqc29uX291dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9u
      RmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICInYXV0aCBnZXQtb3ItY3JlYXRlIGNs
      aWVudC5jc2ktcmJkLXByb3Zpc2lvbmVyJyBjb21tYW5kIGZhaWxlZC5cbiIgKwogICAgICAgICAg
      ICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVsc2Ugc2Vs
      Zi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgcmV0dXJuIHN0cihqc29uX291dFswXVsna2V5
      J10pCgogICAgZGVmIGdldF9jZXBoZnNfZGF0YV9wb29sX2RldGFpbHMoc2VsZik6CiAgICAgICAg
      Y21kX2pzb24gPSB7InByZWZpeCI6ICJmcyBscyIsICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAg
      cmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNt
      ZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUgaXMgYW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsIHJl
      cG9ydCBhbiBlcnJvcgogICAgICAgIGlmIHJldF92YWwgIT0gMDoKICAgICAgICAgICAgIyBpZiBm
      cyBhbmQgZGF0YV9wb29sIGFyZ3VtZW50cyBhcmUgbm90IHNldCwgc2lsZW50bHkgcmV0dXJuCiAg
      ICAgICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSA9PSAi
      IiBhbmQgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUgPT0gIiI6CiAgICAg
      ICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgIyBpZiB1c2VyIGhhcyBwcm92aWRlZCBhbnkg
      b2YgdGhlCiAgICAgICAgICAgICMgJy0tY2VwaGZzLWZpbGVzeXN0ZW0tbmFtZScgb3IgJy0tY2Vw
      aGZzLWRhdGEtcG9vbC1uYW1lJyBhcmd1bWVudHMsCiAgICAgICAgICAgICMgcmFpc2UgYW4gZXhj
      ZXB0aW9uIGFzIHdlIGFyZSB1bmFibGUgdG8gdmVyaWZ5IHRoZSBhcmdzCiAgICAgICAgICAgIHJh
      aXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAiJ2ZzIGxzJyBj
      ZXBoIGNhbGwgZmFpbGVkIHdpdGggZXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZykpCgogICAgICAg
      IG1hdGNoaW5nX2pzb25fb3V0ID0ge30KICAgICAgICAjIGlmICctLWNlcGhmcy1maWxlc3lzdGVt
      LW5hbWUnIGFyZ3VtZW50IGlzIHByb3ZpZGVkLAogICAgICAgICMgY2hlY2sgd2hldGhlciB0aGUg
      cHJvdmlkZWQgZmlsZXN5c3RlbS1uYW1lIGV4aXN0cyBvciBub3QKICAgICAgICBpZiBzZWxmLl9h
      cmdfcGFyc2VyLmNlcGhmc19maWxlc3lzdGVtX25hbWU6CiAgICAgICAgICAgICMgZ2V0IHRoZSBt
      YXRjaGluZyBsaXN0CiAgICAgICAgICAgIG1hdGNoaW5nX2pzb25fb3V0X2xpc3QgPSBbbWF0Y2hl
      ZCBmb3IgbWF0Y2hlZCBpbiBqc29uX291dAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgIGlmIHN0cihtYXRjaGVkWyduYW1lJ10pID09IHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZz
      X2ZpbGVzeXN0ZW1fbmFtZV0KICAgICAgICAgICAgIyB1bmFibGUgdG8gZmluZCBhIG1hdGNoaW5n
      IGZzLW5hbWUsIHJhaXNlIGFuIGVycm9yCiAgICAgICAgICAgIGlmIGxlbihtYXRjaGluZ19qc29u
      X291dF9saXN0KSA9PSAwOgogICAgICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4
      Y2VwdGlvbigKICAgICAgICAgICAgICAgICAgICAoIkZpbGVzeXN0ZW0gcHJvdmlkZWQsICd7fScs
      ICIgKwogICAgICAgICAgICAgICAgICAgICAiaXMgbm90IGZvdW5kIGluIHRoZSBmcy1saXN0OiAn
      e30nIikuZm9ybWF0KAogICAgICAgICAgICAgICAgICAgICAgICBzZWxmLl9hcmdfcGFyc2VyLmNl
      cGhmc19maWxlc3lzdGVtX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIFtzdHIoeFsnbmFt
      ZSddKSBmb3IgeCBpbiBqc29uX291dF0pKQogICAgICAgICAgICBtYXRjaGluZ19qc29uX291dCA9
      IG1hdGNoaW5nX2pzb25fb3V0X2xpc3RbMF0KICAgICAgICAjIGlmIGNlcGhmcyBmaWxlc3lzdGVt
      IG5hbWUgaXMgbm90IHByb3ZpZGVkLAogICAgICAgICMgdHJ5IHRvIGdldCBhIGRlZmF1bHQgZnMg
      bmFtZSBieSBkb2luZyB0aGUgZm9sbG93aW5nCiAgICAgICAgZWxzZToKICAgICAgICAgICAgIyBh
      LiBjaGVjayBpZiB0aGVyZSBpcyBvbmx5IG9uZSBmaWxlc3lzdGVtIGlzIHByZXNlbnQKICAgICAg
      ICAgICAgaWYgbGVuKGpzb25fb3V0KSA9PSAxOgogICAgICAgICAgICAgICAgbWF0Y2hpbmdfanNv
      bl9vdXQgPSBqc29uX291dFswXQogICAgICAgICAgICAjIGIuIG9yIGVsc2UsIGNoZWNrIGlmIGRh
      dGFfcG9vbCBuYW1lIGlzIHByb3ZpZGVkCiAgICAgICAgICAgIGVsaWYgc2VsZi5fYXJnX3BhcnNl
      ci5jZXBoZnNfZGF0YV9wb29sX25hbWU6CiAgICAgICAgICAgICAgICAjIGFuZCBpZiBwcmVzZW50
      LCBjaGVjayB3aGV0aGVyIHRoZXJlIGV4aXN0cyBhIGZzIHdoaWNoIGhhcyB0aGUgZGF0YV9wb29s
      CiAgICAgICAgICAgICAgICBmb3IgZWFjaEogaW4ganNvbl9vdXQ6CiAgICAgICAgICAgICAgICAg
      ICAgaWYgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUgaW4gZWFjaEpbJ2Rh
      dGFfcG9vbHMnXToKICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hpbmdfanNvbl9vdXQgPSBl
      YWNoSgogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgIyBpZiB0
      aGVyZSBpcyBubyBtYXRjaGluZyBmcyBleGlzdHMsIHRoYXQgbWVhbnMgcHJvdmlkZWQgZGF0YV9w
      b29sIG5hbWUgaXMgaW52YWxpZAogICAgICAgICAgICAgICAgaWYgbm90IG1hdGNoaW5nX2pzb25f
      b3V0OgogICAgICAgICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24o
      CiAgICAgICAgICAgICAgICAgICAgICAgICJQcm92aWRlZCBkYXRhX3Bvb2wgbmFtZSwge30sIGRv
      ZXMgbm90IGV4aXN0cyIuZm9ybWF0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5f
      YXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUpKQogICAgICAgICAgICAjIGMuIGlmIG5v
      dGhpbmcgaXMgc2V0IGFuZCBjb3VsZG4ndCBmaW5kIGEgZGVmYXVsdCwKICAgICAgICAgICAgZWxz
      ZToKICAgICAgICAgICAgICAgICMganVzdCByZXR1cm4gc2lsZW50bHkKICAgICAgICAgICAgICAg
      IHJldHVybgoKICAgICAgICBpZiBtYXRjaGluZ19qc29uX291dDoKICAgICAgICAgICAgc2VsZi5f
      YXJnX3BhcnNlci5jZXBoZnNfZmlsZXN5c3RlbV9uYW1lID0gc3RyKAogICAgICAgICAgICAgICAg
      bWF0Y2hpbmdfanNvbl9vdXRbJ25hbWUnXSkKCiAgICAgICAgaWYgdHlwZShtYXRjaGluZ19qc29u
      X291dFsnZGF0YV9wb29scyddKSA9PSBsaXN0OgogICAgICAgICAgICAjIGlmIHRoZSB1c2VyIGhh
      cyBhbHJlYWR5IHByb3ZpZGVkIGRhdGEtcG9vbC1uYW1lLAogICAgICAgICAgICAjIHRocm91Z2gg
      LS1jZXBoZnMtZGF0YS1wb29sLW5hbWUKICAgICAgICAgICAgaWYgc2VsZi5fYXJnX3BhcnNlci5j
      ZXBoZnNfZGF0YV9wb29sX25hbWU6CiAgICAgICAgICAgICAgICAjIGlmIHRoZSBwcm92aWRlZCBu
      YW1lIGlzIG5vdCBtYXRjaGluZyB3aXRoIHRoZSBvbmUgaW4gdGhlIGxpc3QKICAgICAgICAgICAg
      ICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFfcG9vbF9uYW1lIG5vdCBpbiBtYXRj
      aGluZ19qc29uX291dFsnZGF0YV9wb29scyddOgogICAgICAgICAgICAgICAgICAgIHJhaXNlIEV4
      ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgICJ7fTogJ3t9
      Jywge306IHt9Ii5mb3JtYXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUHJvdmlkZWQg
      ZGF0YS1wb29sLW5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fYXJnX3Bh
      cnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAi
      ZG9lc24ndCBtYXRjaCBmcm9tIHRoZSBkYXRhLXBvb2xzJyBsaXN0IiwKICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgIFtzdHIoeCkgZm9yIHggaW4gbWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9v
      bHMnXV0pKQogICAgICAgICAgICAjIGlmIGRhdGFfcG9vbCBuYW1lIGlzIG5vdCBwcm92aWRlZCwK
      ICAgICAgICAgICAgIyB0aGVuIHRyeSB0byBmaW5kIGEgZGVmYXVsdCBkYXRhIHBvb2wgbmFtZQog
      ICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgIyBpZiBubyBkYXRhX3Bvb2xzIGV4aXN0
      LCBzaWxlbnRseSByZXR1cm4KICAgICAgICAgICAgICAgIGlmIGxlbihtYXRjaGluZ19qc29uX291
      dFsnZGF0YV9wb29scyddKSA9PSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAg
      ICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUgPSBzdHIoCiAg
      ICAgICAgICAgICAgICAgICAgbWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9vbHMnXVswXSkKICAg
      ICAgICAgICAgIyBpZiB0aGVyZSBhcmUgbW9yZSB0aGFuIG9uZSAnZGF0YV9wb29scycgZXhpc3Qs
      CiAgICAgICAgICAgICMgdGhlbiB3YXJuIHRoZSB1c2VyIHRoYXQgd2UgYXJlIHVzaW5nIHRoZSBz
      ZWxlY3RlZCBuYW1lCiAgICAgICAgICAgIGlmIGxlbihtYXRjaGluZ19qc29uX291dFsnZGF0YV9w
      b29scyddKSA+IDE6CiAgICAgICAgICAgICAgICBwcmludCgie306IHt9XG57fTogJ3t9J1xuIi5m
      b3JtYXQoCiAgICAgICAgICAgICAgICAgICAgIldBUk5JTkc6IE11bHRpcGxlIGRhdGEgcG9vbHMg
      ZGV0ZWN0ZWQiLAogICAgICAgICAgICAgICAgICAgIFtzdHIoeCkgZm9yIHggaW4gbWF0Y2hpbmdf
      anNvbl9vdXRbJ2RhdGFfcG9vbHMnXV0sCiAgICAgICAgICAgICAgICAgICAgIlVzaW5nIHRoZSBk
      YXRhLXBvb2wiLAogICAgICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2Rh
      dGFfcG9vbF9uYW1lKSkKCiAgICBkZWYgY3JlYXRlX2NlcGhDU0lLZXlyaW5nX1JCRE5vZGUoc2Vs
      Zik6CiAgICAgICAgY21kX2pzb24gPSB7InByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUiLAog
      ICAgICAgICAgICAgICAgICAgICJlbnRpdHkiOiAiY2xpZW50LmNzaS1yYmQtbm9kZSIsCiAgICAg
      ICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJwcm9maWxlIHJiZCIsCiAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgIm9zZCIsICJwcm9maWxlIHJiZCJdLAogICAgICAgICAgICAgICAg
      ICAgICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cg
      PSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUg
      aXMgYW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwIG9yIGxl
      bihqc29uX291dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2Vw
      dGlvbigKICAgICAgICAgICAgICAgICInYXV0aCBnZXQtb3ItY3JlYXRlIGNsaWVudC5jc2ktcmJk
      LW5vZGUnIGNvbW1hbmQgZmFpbGVkXG4iICsKICAgICAgICAgICAgICAgICJFcnJvcjoge30iLmZv
      cm1hdChlcnJfbXNnIGlmIHJldF92YWwgIT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VUUFVUX0xJU1Qp
      KQogICAgICAgIHJldHVybiBzdHIoanNvbl9vdXRbMF1bJ2tleSddKQoKICAgIGRlZiBjcmVhdGVf
      Y2hlY2tlcktleShzZWxmKToKICAgICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0
      LW9yLWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAgICAgImVudGl0eSI6IHNlbGYucnVuX2FzX3Vz
      ZXIsCiAgICAgICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJhbGxvdyByLCBhbGxvdyBj
      b21tYW5kIHF1b3J1bV9zdGF0dXMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvc2Qi
      LCAoImFsbG93IHJ3eCBwb29sPXswfS5yZ3cubWV0YSwgIiArCiAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAiYWxsb3cgciBwb29sPS5yZ3cucm9vdCwgIiArCiAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAiYWxsb3cgcncgcG9vbD17MH0ucmd3LmNvbnRyb2ws
      ICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFsbG93IHggcG9vbD17
      MH0ucmd3LmJ1Y2tldHMuaW5kZXgiKS5mb3JtYXQoc2VsZi5fYXJnX3BhcnNlci5yZ3dfcG9vbF9w
      cmVmaXgpXSwKICAgICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImpzb24ifQogICAgICAgIHJl
      dF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2NtZF9qc29uX2dlbihjbWRf
      anNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAg
      ICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAgICAgICAgICAgIHJh
      aXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAiJ2F1dGggZ2V0
      LW9yLWNyZWF0ZSB7fScgY29tbWFuZCBmYWlsZWRcbiIuZm9ybWF0KHNlbGYucnVuX2FzX3VzZXIp
      ICsKICAgICAgICAgICAgICAgICJFcnJvcjoge30iLmZvcm1hdChlcnJfbXNnIGlmIHJldF92YWwg
      IT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VUUFVUX0xJU1QpKQogICAgICAgIHJldHVybiBzdHIoanNv
      bl9vdXRbMF1bJ2tleSddKQoKICAgIGRlZiBfZ2VuX291dHB1dF9tYXAoc2VsZik6CiAgICAgICAg
      aWYgc2VsZi5vdXRfbWFwOgogICAgICAgICAgICByZXR1cm4KICAgICAgICBwb29sc190b192YWxp
      ZGF0ZSA9IFtzZWxmLl9hcmdfcGFyc2VyLnJiZF9kYXRhX3Bvb2xfbmFtZV0KICAgICAgICAjIGlm
      IHJnd19lbmRwb2ludCBpcyBwcm92aWRlZCwgdmFsaWRhdGUgaXQKICAgICAgICBpZiBzZWxmLl9h
      cmdfcGFyc2VyLnJnd19lbmRwb2ludDoKICAgICAgICAgICAgc2VsZi5faW52YWxpZF9lbmRwb2lu
      dChzZWxmLl9hcmdfcGFyc2VyLnJnd19lbmRwb2ludCkKICAgICAgICAgICAgc2VsZi5lbmRwb2lu
      dF9kaWFsKHNlbGYuX2FyZ19wYXJzZXIucmd3X2VuZHBvaW50KQogICAgICAgICAgICByZ3dfcG9v
      bF90b192YWxpZGF0ZSA9IFsiezB9LnJndy5tZXRhIi5mb3JtYXQoc2VsZi5fYXJnX3BhcnNlci5y
      Z3dfcG9vbF9wcmVmaXgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiLnJn
      dy5yb290IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInswfS5yZ3cuY29u
      dHJvbCIuZm9ybWF0KAogICAgICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5yZ3dfcG9vbF9w
      cmVmaXgpLAogICAgICAgICAgICAgICAgInswfS5yZ3cubG9nIi5mb3JtYXQoCiAgICAgICAgICAg
      ICAgICBzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCldCiAgICAgICAgICAgIHBvb2xz
      X3RvX3ZhbGlkYXRlLmV4dGVuZChyZ3dfcG9vbF90b192YWxpZGF0ZSkKICAgICAgICBmb3IgcG9v
      bCBpbiBwb29sc190b192YWxpZGF0ZToKICAgICAgICAgICAgaWYgbm90IHNlbGYuY2x1c3Rlci5w
      b29sX2V4aXN0cyhwb29sKToKICAgICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVF
      eGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgIlRoZSBwcm92aWRlZCBwb29sIHt9IGRvZXMg
      bm90IGV4aXN0Ii5mb3JtYXQocG9vbCkpCiAgICAgICAgc2VsZi5fZXhjbHVkZWRfa2V5cy5hZGQo
      J0NMVVNURVJfTkFNRScpCiAgICAgICAgc2VsZi5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxz
      KCkKICAgICAgICBzZWxmLm91dF9tYXBbJ05BTUVTUEFDRSddID0gc2VsZi5fYXJnX3BhcnNlci5u
      YW1lc3BhY2UKICAgICAgICBzZWxmLm91dF9tYXBbJ0NMVVNURVJfTkFNRSddID0gc2VsZi5fYXJn
      X3BhcnNlci5jbHVzdGVyX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxf
      RlNJRCddID0gc2VsZi5nZXRfZnNpZCgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydST09LX0VYVEVS
      TkFMX1VTRVJOQU1FJ10gPSBzZWxmLnJ1bl9hc191c2VyCiAgICAgICAgc2VsZi5vdXRfbWFwWydS
      T09LX0VYVEVSTkFMX0NFUEhfTU9OX0RBVEEnXSA9IHNlbGYuZ2V0X2NlcGhfZXh0ZXJuYWxfbW9u
      X2RhdGEoKQogICAgICAgIHNlbGYub3V0X21hcFsnUk9PS19FWFRFUk5BTF9VU0VSX1NFQ1JFVCdd
      ID0gc2VsZi5jcmVhdGVfY2hlY2tlcktleSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJE
      X05PREVfU0VDUkVUX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJETm9k
      ZSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddID0g
      c2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJEUHJvdmlzaW9uZXIoKQogICAgICAgIHNlbGYu
      b3V0X21hcFsnQ0VQSEZTX1BPT0xfTkFNRSddID0gc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0
      YV9wb29sX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBbJ0NFUEhGU19GU19OQU1FJ10gPSBzZWxm
      Ll9hcmdfcGFyc2VyLmNlcGhmc19maWxlc3lzdGVtX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBb
      J0NTSV9DRVBIRlNfTk9ERV9TRUNSRVQnXSA9ICcnCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lf
      Q0VQSEZTX1BST1ZJU0lPTkVSX1NFQ1JFVCddID0gJycKICAgICAgICAjIGNyZWF0ZSBDZXBoRlMg
      bm9kZSBhbmQgcHJvdmlzaW9uZXIga2V5cmluZyBvbmx5IHdoZW4gTURTIGV4aXN0cwogICAgICAg
      IGlmIHNlbGYub3V0X21hcFsnQ0VQSEZTX0ZTX05BTUUnXSBhbmQgc2VsZi5vdXRfbWFwWydDRVBI
      RlNfUE9PTF9OQU1FJ106CiAgICAgICAgICAgIHNlbGYub3V0X21hcFsnQ1NJX0NFUEhGU19OT0RF
      X1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTTm9kZSgKICAgICAg
      ICAgICAgKQogICAgICAgICAgICBzZWxmLm91dF9tYXBbJ0NTSV9DRVBIRlNfUFJPVklTSU9ORVJf
      U0VDUkVUJ10gPSBzZWxmLmNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBoRlNQcm92aXNpb25lcigp
      CiAgICAgICAgc2VsZi5vdXRfbWFwWydSR1dfRU5EUE9JTlQnXSA9IHNlbGYuX2FyZ19wYXJzZXIu
      cmd3X2VuZHBvaW50CiAgICAgICAgc2VsZi5vdXRfbWFwWydSQkRfUE9PTF9OQU1FJ10gPSBzZWxm
      Ll9hcmdfcGFyc2VyLnJiZF9kYXRhX3Bvb2xfbmFtZQogICAgICAgIHNlbGYub3V0X21hcFsnUkdX
      X1BPT0xfUFJFRklYJ10gPSBzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeAoKICAgIGRl
      ZiBnZW5fc2hlbGxfb3V0KHNlbGYpOgogICAgICAgIHNlbGYuX2dlbl9vdXRwdXRfbWFwKCkKICAg
      ICAgICBzaE91dElPID0gU3RyaW5nSU8oKQogICAgICAgIGZvciBrLCB2IGluIHNlbGYub3V0X21h
      cC5pdGVtcygpOgogICAgICAgICAgICBpZiB2IGFuZCBrIG5vdCBpbiBzZWxmLl9leGNsdWRlZF9r
      ZXlzOgogICAgICAgICAgICAgICAgc2hPdXRJTy53cml0ZSgnZXhwb3J0IHt9PXt9e30nLmZvcm1h
      dChrLCB2LCBMSU5FU0VQKSkKICAgICAgICBzaE91dCA9IHNoT3V0SU8uZ2V0dmFsdWUoKQogICAg
      ICAgIHNoT3V0SU8uY2xvc2UoKQogICAgICAgIHJldHVybiBzaE91dAoKICAgIGRlZiBnZW5fanNv
      bl9vdXQoc2VsZik6CiAgICAgICAgc2VsZi5fZ2VuX291dHB1dF9tYXAoKQogICAgICAgIGpzb25f
      b3V0ID0gWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJyb29rLWNlcGgt
      bW9uLWVuZHBvaW50cyIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJDb25maWdNYXAiLAogICAg
      ICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImRhdGEiOiBzZWxmLm91
      dF9tYXBbJ1JPT0tfRVhURVJOQUxfQ0VQSF9NT05fREFUQSddLAogICAgICAgICAgICAgICAgICAg
      ICJtYXhNb25JZCI6ICIwIiwKICAgICAgICAgICAgICAgICAgICAibWFwcGluZyI6ICJ7fSIKICAg
      ICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAg
      ICAgIm5hbWUiOiAicm9vay1jZXBoLW1vbiIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNy
      ZXQiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImFkbWlu
      LXNlY3JldCI6ICJhZG1pbi1zZWNyZXQiLAogICAgICAgICAgICAgICAgICAgICJjbHVzdGVyLW5h
      bWUiOiBzZWxmLm91dF9tYXBbJ0NMVVNURVJfTkFNRSddLAogICAgICAgICAgICAgICAgICAgICJm
      c2lkIjogc2VsZi5vdXRfbWFwWydST09LX0VYVEVSTkFMX0ZTSUQnXSwKICAgICAgICAgICAgICAg
      ICAgICAibW9uLXNlY3JldCI6ICJtb24tc2VjcmV0IgogICAgICAgICAgICAgICAgfSwKICAgICAg
      ICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jZXBo
      LW9wZXJhdG9yLWNyZWRzIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlNlY3JldCIsCiAgICAg
      ICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAidXNlcklEIjogc2VsZi5v
      dXRfbWFwWydST09LX0VYVEVSTkFMX1VTRVJOQU1FJ10sCiAgICAgICAgICAgICAgICAgICAgInVz
      ZXJLZXkiOiBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxfVVNFUl9TRUNSRVQnXQogICAgICAg
      ICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAi
      bmFtZSI6ICJyb29rLWNzaS1yYmQtbm9kZSIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNy
      ZXQiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgInVzZXJJ
      RCI6ICdjc2ktcmJkLW5vZGUnLAogICAgICAgICAgICAgICAgICAgICJ1c2VyS2V5Ijogc2VsZi5v
      dXRfbWFwWydDU0lfUkJEX05PREVfU0VDUkVUX1NFQ1JFVCddCiAgICAgICAgICAgICAgICB9CiAg
      ICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogImNlcGgt
      cmJkIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlN0b3JhZ2VDbGFzcyIsCiAgICAgICAgICAg
      ICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAicG9vbCI6IHNlbGYub3V0X21hcFsn
      UkJEX1BPT0xfTkFNRSddCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICBd
      CgogICAgICAgICMgaWYgJ0NTSV9SQkRfUFJPVklTSU9ORVJfU0VDUkVUJyBleGlzdHMsIHRoZW4g
      b25seSBhZGQgJ3Jvb2stY3NpLXJiZC1wcm92aXNpb25lcicgU2VjcmV0CiAgICAgICAgaWYgc2Vs
      Zi5vdXRfbWFwWydDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddOgogICAgICAgICAgICBqc29u
      X291dC5hcHBlbmQoewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jc2ktcmJkLXByb3Zp
      c2lvbmVyIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlNlY3JldCIsCiAgICAgICAgICAgICAg
      ICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAidXNlcklEIjogJ2NzaS1yYmQtcHJvdmlz
      aW9uZXInLAogICAgICAgICAgICAgICAgICAgICJ1c2VyS2V5Ijogc2VsZi5vdXRfbWFwWydDU0lf
      UkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9
      KQogICAgICAgICMgaWYgJ0NTSV9DRVBIRlNfUFJPVklTSU9ORVJfU0VDUkVUJyBleGlzdHMsIHRo
      ZW4gb25seSBhZGQgJ3Jvb2stY3NpLWNlcGhmcy1wcm92aXNpb25lcicgU2VjcmV0CiAgICAgICAg
      aWYgc2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX1BST1ZJU0lPTkVSX1NFQ1JFVCddOgogICAgICAg
      ICAgICBqc29uX291dC5hcHBlbmQoewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jc2kt
      Y2VwaGZzLXByb3Zpc2lvbmVyIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlNlY3JldCIsCiAg
      ICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAiYWRtaW5JRCI6ICdj
      c2ktY2VwaGZzLXByb3Zpc2lvbmVyJywKICAgICAgICAgICAgICAgICAgICAiYWRtaW5LZXkiOiBz
      ZWxmLm91dF9tYXBbJ0NTSV9DRVBIRlNfUFJPVklTSU9ORVJfU0VDUkVUJ10KICAgICAgICAgICAg
      ICAgIH0sCiAgICAgICAgICAgIH0pCiAgICAgICAgIyBpZiAnQ1NJX0NFUEhGU19OT0RFX1NFQ1JF
      VCcgZXhpc3RzLCB0aGVuIG9ubHkgYWRkICdyb29rLWNzaS1jZXBoZnMtbm9kZScgU2VjcmV0CiAg
      ICAgICAgaWYgc2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX05PREVfU0VDUkVUJ106CiAgICAgICAg
      ICAgIGpzb25fb3V0LmFwcGVuZCh7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJyb29rLWNzaS1j
      ZXBoZnMtbm9kZSIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAg
      ICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImFkbWluSUQiOiAnY3NpLWNlcGhm
      cy1ub2RlJywKICAgICAgICAgICAgICAgICAgICAiYWRtaW5LZXkiOiBzZWxmLm91dF9tYXBbJ0NT
      SV9DRVBIRlNfTk9ERV9TRUNSRVQnXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQog
      ICAgICAgICMgaWYgJ0NFUEhGU19GU19OQU1FJyBleGlzdHMsIHRoZW4gb25seSBhZGQgJ2NlcGhm
      cycgU3RvcmFnZUNsYXNzCiAgICAgICAgaWYgc2VsZi5vdXRfbWFwWydDRVBIRlNfRlNfTkFNRSdd
      OgogICAgICAgICAgICBqc29uX291dC5hcHBlbmQoewogICAgICAgICAgICAgICAgIm5hbWUiOiAi
      Y2VwaGZzIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlN0b3JhZ2VDbGFzcyIsCiAgICAgICAg
      ICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAiZnNOYW1lIjogc2VsZi5vdXRf
      bWFwWydDRVBIRlNfRlNfTkFNRSddLAogICAgICAgICAgICAgICAgICAgICJwb29sIjogc2VsZi5v
      dXRfbWFwWydDRVBIRlNfUE9PTF9OQU1FJ10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAg
      fSkKICAgICAgICAjIGlmICdSR1dfRU5EUE9JTlQnIGV4aXN0cywgdGhlbiBvbmx5IGFkZCAnY2Vw
      aC1yZ3cnIFN0b3JhZ2VDbGFzcwogICAgICAgIGlmIHNlbGYub3V0X21hcFsnUkdXX0VORFBPSU5U
      J106CiAgICAgICAgICAgIGpzb25fb3V0LmFwcGVuZCh7CiAgICAgICAgICAgICAgICAibmFtZSI6
      ICJjZXBoLXJndyIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTdG9yYWdlQ2xhc3MiLAogICAg
      ICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImVuZHBvaW50Ijogc2Vs
      Zi5vdXRfbWFwWydSR1dfRU5EUE9JTlQnXSwKICAgICAgICAgICAgICAgICAgICAicG9vbFByZWZp
      eCI6IHNlbGYub3V0X21hcFsnUkdXX1BPT0xfUFJFRklYJ10KICAgICAgICAgICAgICAgIH0KICAg
      ICAgICAgICAgfSkKICAgICAgICByZXR1cm4ganNvbi5kdW1wcyhqc29uX291dCkrTElORVNFUAoK
      ICAgIGRlZiBtYWluKHNlbGYpOgogICAgICAgIGdlbmVyYXRlZF9vdXRwdXQgPSAnJwogICAgICAg
      IGlmIHNlbGYuX2FyZ19wYXJzZXIuZm9ybWF0ID09ICdqc29uJzoKICAgICAgICAgICAgZ2VuZXJh
      dGVkX291dHB1dCA9IHNlbGYuZ2VuX2pzb25fb3V0KCkKICAgICAgICBlbGlmIHNlbGYuX2FyZ19w
      YXJzZXIuZm9ybWF0ID09ICdiYXNoJzoKICAgICAgICAgICAgZ2VuZXJhdGVkX291dHB1dCA9IHNl
      bGYuZ2VuX3NoZWxsX291dCgpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgRXhlY3V0
      aW9uRmFpbHVyZUV4Y2VwdGlvbigiVW5zdXBwb3J0ZWQgZm9ybWF0OiB7fSIuZm9ybWF0KAogICAg
      ICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5mb3JtYXQpKQogICAgICAgIHByaW50KCd7fScu
      Zm9ybWF0KGdlbmVyYXRlZF9vdXRwdXQpKQogICAgICAgIGlmIHNlbGYub3V0cHV0X2ZpbGUgYW5k
      IGdlbmVyYXRlZF9vdXRwdXQ6CiAgICAgICAgICAgIGZPdXQgPSBvcGVuKHNlbGYub3V0cHV0X2Zp
      bGUsICd3JykKICAgICAgICAgICAgZk91dC53cml0ZShnZW5lcmF0ZWRfb3V0cHV0KQogICAgICAg
      ICAgICBmT3V0LmNsb3NlKCkKCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIE1BSU4gIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwppZiBf
      X25hbWVfXyA9PSAnX19tYWluX18nOgogICAgcmpPYmogPSBSYWRvc0pTT04oKQogICAgdHJ5Ogog
      ICAgICAgIHJqT2JqLm1haW4oKQogICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24g
      YXMgZXJyOgogICAgICAgIHByaW50KCJFeGNlY3V0aW9uIEZhaWxlZDoge30iLmZvcm1hdChlcnIp
      KQogICAgZXhjZXB0IEtleUVycm9yIGFzIGtFcnI6CiAgICAgICAgcHJpbnQoIktleUVycm9yOiAl
      cyIsIGtFcnIpCiAgICBleGNlcHQgT1NFcnJvciBhcyBvc0VycjoKICAgICAgICBwcmludCgiRXJy
      b3Igd2hpbGUgdHJ5aW5nIHRvIG91dHB1dCB0aGUgZGF0YToge30iLmZvcm1hdChvc0VycikpCiAg
      ICBmaW5hbGx5OgogICAgICAgIHJqT2JqLnNodXRkb3duKCkKCgojIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIFRFU1Qg
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIwojIHRoaXMgaXMgbWFpbmx5IGZvciB0ZXN0aW5nIGFuZCBjb3VsZCBiZSB1
      c2VkIHdoZXJlICdyYWRvcycgaXMgbm90IGF2YWlsYWJsZQpjbGFzcyBEdW1teVJhZG9zKG9iamVj
      dCk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc2VsZi5yZXR1cm5fdmFsID0gMAog
      ICAgICAgIHNlbGYuZXJyX21lc3NhZ2UgPSAnJwogICAgICAgIHNlbGYuc3RhdGUgPSAnY29ubmVj
      dGVkJwogICAgICAgIHNlbGYuY21kX291dHB1dF9tYXAgPSB7fQogICAgICAgIHNlbGYuY21kX25h
      bWVzID0ge30KICAgICAgICBzZWxmLl9pbml0X2NtZF9vdXRwdXRfbWFwKCkKCiAgICBkZWYgX2lu
      aXRfY21kX291dHB1dF9tYXAoc2VsZik6CiAgICAgICAgc2VsZi5jbWRfbmFtZXNbJ2ZzIGxzJ10g
      PSAnJyd7ImZvcm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJmcyBscyJ9JycnCiAgICAgICAgc2Vs
      Zi5jbWRfbmFtZXNbJ3F1b3J1bV9zdGF0dXMnXSA9ICcnJ3siZm9ybWF0IjogImpzb24iLCAicHJl
      Zml4IjogInF1b3J1bV9zdGF0dXMifScnJwogICAgICAgICMgYWxsIHRoZSBjb21tYW5kcyBhbmQg
      dGhlaXIgb3V0cHV0CiAgICAgICAgc2VsZi5jbWRfb3V0cHV0X21hcFtzZWxmLmNtZF9uYW1lc1sn
      ZnMgbHMnXV0gPSBcCiAgICAgICAgICAgICcnJ1t7Im5hbWUiOiJteWZzIiwibWV0YWRhdGFfcG9v
      bCI6Im15ZnMtbWV0YWRhdGEiLCJtZXRhZGF0YV9wb29sX2lkIjoyLCJkYXRhX3Bvb2xfaWRzIjpb
      M10sImRhdGFfcG9vbHMiOlsibXlmcy1kYXRhMCJdfV0nJycKICAgICAgICBzZWxmLmNtZF9vdXRw
      dXRfbWFwW3NlbGYuY21kX25hbWVzWydxdW9ydW1fc3RhdHVzJ11dID0gXAogICAgICAgICAgICAn
      Jyd7ImVsZWN0aW9uX2Vwb2NoIjozLCJxdW9ydW0iOlswXSwicXVvcnVtX25hbWVzIjpbImEiXSwi
      cXVvcnVtX2xlYWRlcl9uYW1lIjoiYSIsInF1b3J1bV9hZ2UiOjE0Mzg1LCJmZWF0dXJlcyI6eyJx
      dW9ydW1fY29uIjoiNDU0MDEzODI5MjgzNjY5NjA2MyIsInF1b3J1bV9tb24iOlsia3Jha2VuIiwi
      bHVtaW5vdXMiLCJtaW1pYyIsIm9zZG1hcC1wcnVuZSIsIm5hdXRpbHVzIiwib2N0b3B1cyJdfSwi
      bW9ubWFwIjp7ImVwb2NoIjoxLCJmc2lkIjoiYWY0ZTE2NzMtMGI3Mi00MDJkLTk5MGEtMjJkMjkx
      OWQwZjFjIiwibW9kaWZpZWQiOiIyMDIwLTA1LTA3VDAzOjM2OjM5LjkxODAzNVoiLCJjcmVhdGVk
      IjoiMjAyMC0wNS0wN1QwMzozNjozOS45MTgwMzVaIiwibWluX21vbl9yZWxlYXNlIjoxNSwibWlu
      X21vbl9yZWxlYXNlX25hbWUiOiJvY3RvcHVzIiwiZmVhdHVyZXMiOnsicGVyc2lzdGVudCI6WyJr
      cmFrZW4iLCJsdW1pbm91cyIsIm1pbWljIiwib3NkbWFwLXBydW5lIiwibmF1dGlsdXMiLCJvY3Rv
      cHVzIl0sIm9wdGlvbmFsIjpbXX0sIm1vbnMiOlt7InJhbmsiOjAsIm5hbWUiOiJhIiwicHVibGlj
      X2FkZHJzIjp7ImFkZHJ2ZWMiOlt7InR5cGUiOiJ2MiIsImFkZHIiOiIxMC4xMTAuMjA1LjE3NDoz
      MzAwIiwibm9uY2UiOjB9LHsidHlwZSI6InYxIiwiYWRkciI6IjEwLjExMC4yMDUuMTc0OjY3ODki
      LCJub25jZSI6MH1dfSwiYWRkciI6IjEwLjExMC4yMDUuMTc0OjY3ODkvMCIsInB1YmxpY19hZGRy
      IjoiMTAuMTEwLjIwNS4xNzQ6Njc4OS8wIiwicHJpb3JpdHkiOjAsIndlaWdodCI6MH1dfX0nJycK
      ICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwgImFsbG93IHIs
      IGFsbG93IGNvbW1hbmQgcXVvcnVtX3N0YXR1cyIsICJvc2QiLCAiYWxsb3cgcnd4IHBvb2w9ZGVm
      YXVsdC5yZ3cubWV0YSwgYWxsb3cgciBwb29sPS5yZ3cucm9vdCwgYWxsb3cgcncgcG9vbD1kZWZh
      dWx0LnJndy5jb250cm9sLCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5yZ3cuYnVja2V0cy5pbmRleCJd
      LCAiZW50aXR5IjogImNsaWVudC5oZWFsdGhjaGVja2VyIiwgImZvcm1hdCI6ICJqc29uIiwgInBy
      ZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUifScnJ10gPSBcCiAgICAgICAgICAgICcnJ1t7ImVu
      dGl0eSI6ImNsaWVudC5oZWFsdGhjaGVja2VyIiwia2V5IjoiQVFERmtiTmVmdDViRlJBQVRuZExO
      VVNFS3J1b3p4aVppM2xyZEE9PSIsImNhcHMiOnsibW9uIjoiYWxsb3cgciwgYWxsb3cgY29tbWFu
      ZCBxdW9ydW1fc3RhdHVzIiwib3NkIjoiYWxsb3cgcnd4IHBvb2w9ZGVmYXVsdC5yZ3cubWV0YSwg
      YWxsb3cgciBwb29sPS5yZ3cucm9vdCwgYWxsb3cgcncgcG9vbD1kZWZhdWx0LnJndy5jb250cm9s
      LCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5yZ3cuYnVja2V0cy5pbmRleCJ9fV0nJycKICAgICAgICBz
      ZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwgInByb2ZpbGUgcmJkIiwgIm9z
      ZCIsICJwcm9maWxlIHJiZCJdLCAiZW50aXR5IjogImNsaWVudC5jc2ktcmJkLW5vZGUiLCAiZm9y
      bWF0IjogImpzb24iLCAicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSJ9JycnXSA9IFwKICAg
      ICAgICAgICAgJycnW3siZW50aXR5IjoiY2xpZW50LmNzaS1yYmQtbm9kZSIsImtleSI6IkFRQk9n
      ck5lSGJLMUF4QUF1YllCZVY4UzFVL0dQenE1U1ZlcTZnPT0iLCJjYXBzIjp7Im1vbiI6InByb2Zp
      bGUgcmJkIiwib3NkIjoicHJvZmlsZSByYmQifX1dJycnCiAgICAgICAgc2VsZi5jbWRfb3V0cHV0
      X21hcFsnJyd7ImNhcHMiOiBbIm1vbiIsICJwcm9maWxlIHJiZCIsICJtZ3IiLCAiYWxsb3cgcnci
      LCAib3NkIiwgInByb2ZpbGUgcmJkIl0sICJlbnRpdHkiOiAiY2xpZW50LmNzaS1yYmQtcHJvdmlz
      aW9uZXIiLCAiZm9ybWF0IjogImpzb24iLCAicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSJ9
      JycnXSA9IFwKICAgICAgICAgICAgJycnW3siZW50aXR5IjoiY2xpZW50LmNzaS1yYmQtcHJvdmlz
      aW9uZXIiLCJrZXkiOiJBUUJOZ3JOZTFnZXlLeEFBOGVrVmlSZEUraHNzNU93ZVlCa3dOZz09Iiwi
      Y2FwcyI6eyJtZ3IiOiJhbGxvdyBydyIsIm1vbiI6InByb2ZpbGUgcmJkIiwib3NkIjoicHJvZmls
      ZSByYmQifX1dJycnCiAgICAgICAgc2VsZi5jbWRfb3V0cHV0X21hcFsnJyd7ImNhcHMiOiBbIm1v
      biIsICJhbGxvdyByIiwgIm1nciIsICJhbGxvdyBydyIsICJvc2QiLCAiYWxsb3cgcncgdGFnIGNl
      cGhmcyAqPSoiLCAibWRzIiwgImFsbG93IHJ3Il0sICJlbnRpdHkiOiAiY2xpZW50LmNzaS1jZXBo
      ZnMtbm9kZSIsICJmb3JtYXQiOiAianNvbiIsICJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3JlYXRl
      In0nJyddID0gXAogICAgICAgICAgICAnJydbeyJlbnRpdHkiOiJjbGllbnQuY3NpLWNlcGhmcy1u
      b2RlIiwia2V5IjoiQVFCT2dyTmVFTnVuS3hBQVBDbWdFN1I2RzhEY1huYUoxRjMycWc9PSIsImNh
      cHMiOnsibWRzIjoiYWxsb3cgcnciLCJtZ3IiOiJhbGxvdyBydyIsIm1vbiI6ImFsbG93IHIiLCJv
      c2QiOiJhbGxvdyBydyB0YWcgY2VwaGZzICo9KiJ9fV0nJycKICAgICAgICBzZWxmLmNtZF9vdXRw
      dXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwgImFsbG93IHIiLCAibWdyIiwgImFsbG93IHJ3Iiwg
      Im9zZCIsICJhbGxvdyBydyB0YWcgY2VwaGZzIG1ldGFkYXRhPSoiXSwgImVudGl0eSI6ICJjbGll
      bnQuY3NpLWNlcGhmcy1wcm92aXNpb25lciIsICJmb3JtYXQiOiAianNvbiIsICJwcmVmaXgiOiAi
      YXV0aCBnZXQtb3ItY3JlYXRlIn0nJyddID0gXAogICAgICAgICAgICAnJydbeyJlbnRpdHkiOiJj
      bGllbnQuY3NpLWNlcGhmcy1wcm92aXNpb25lciIsImtleSI6IkFRQk9nck5lQUZnY0dCQUF2R3FL
      T0FEMEQzeHhtVlkwUjkxMmRnPT0iLCJjYXBzIjp7Im1nciI6ImFsbG93IHJ3IiwibW9uIjoiYWxs
      b3cgciIsIm9zZCI6ImFsbG93IHJ3IHRhZyBjZXBoZnMgbWV0YWRhdGE9KiJ9fV0nJycKCiAgICBk
      ZWYgc2h1dGRvd24oc2VsZik6CiAgICAgICAgcGFzcwoKICAgIGRlZiBnZXRfZnNpZChzZWxmKToK
      ICAgICAgICByZXR1cm4gJ2FmNGUxNjczLTBiNzItNDAyZC05OTBhLTIyZDI5MTlkMGYxYycKCiAg
      ICBkZWYgY29uZl9yZWFkX2ZpbGUoc2VsZik6CiAgICAgICAgcGFzcwoKICAgIGRlZiBjb25uZWN0
      KHNlbGYpOgogICAgICAgIHBhc3MKCiAgICBkZWYgbW9uX2NvbW1hbmQoc2VsZiwgY21kLCBvdXQp
      OgogICAgICAgIGpzb25fY21kID0ganNvbi5sb2FkcyhjbWQpCiAgICAgICAganNvbl9jbWRfc3Ry
      ID0ganNvbi5kdW1wcyhqc29uX2NtZCwgc29ydF9rZXlzPVRydWUpCiAgICAgICAgY21kX291dHB1
      dCA9IHNlbGYuY21kX291dHB1dF9tYXBbanNvbl9jbWRfc3RyXQogICAgICAgIHJldHVybiBzZWxm
      LnJldHVybl92YWwsIFwKICAgICAgICAgICAgY21kX291dHB1dCwgXAogICAgICAgICAgICAie30i
      LmZvcm1hdChzZWxmLmVycl9tZXNzYWdlKS5lbmNvZGUoJ3V0Zi04JykKCiAgICBAY2xhc3NtZXRo
      b2QKICAgIGRlZiBSYWRvcyhjb25mZmlsZT1Ob25lKToKICAgICAgICByZXR1cm4gRHVtbXlSYWRv
      cygpCgoKIyBpbm9yZGVyIHRvIHRlc3QgdGhlIHBhY2thZ2UsCiMgY2QgPHNjcmlwdF9kaXJlY3Rv
      cnk+CiMgcHl0aG9uIC1tIHVuaXR0ZXN0IC0tdmVyYm9zZSA8c2NyaXB0X25hbWVfd2l0aG91dF9k
      b3RfcHk+CmNsYXNzIFRlc3RSYWRvc0pTT04odW5pdHRlc3QuVGVzdENhc2UpOgogICAgZGVmIHNl
      dFVwKHNlbGYpOgogICAgICAgIHByaW50KCJ7fSIuZm9ybWF0KCJJIGFtIGluIHNldHVwIikpCiAg
      ICAgICAgc2VsZi5yak9iaiA9IFJhZG9zSlNPTihbJy0tcmJkLWRhdGEtcG9vbC1uYW1lPWFiYycs
      CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy0tcmd3LWVuZHBvaW50PTEwLjEwLjIx
      Mi4xMjI6OTAwMCcsICctLWZvcm1hdD1qc29uJ10pCiAgICAgICAgIyBmb3IgdGVzdGluZywgd2Ug
      YXJlIHVzaW5nICdEdW1teVJhZG9zJyBvYmplY3QKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIg
      PSBEdW1teVJhZG9zLlJhZG9zKCkKCiAgICBkZWYgdGVhckRvd24oc2VsZik6CiAgICAgICAgcHJp
      bnQoInt9Ii5mb3JtYXQoIkkgYW0gdGVhcmluZyBkb3duIHRoZSBzZXR1cCIpKQogICAgICAgIHNl
      bGYucmpPYmouc2h1dGRvd24oKQoKICAgIGRlZiB0ZXN0X21ldGhvZF9tYWluX291dHB1dChzZWxm
      KToKICAgICAgICBwcmludCgiSlNPTiBPdXRwdXQiKQogICAgICAgIHNlbGYucmpPYmouX2FyZ19w
      YXJzZXIuZm9ybWF0ID0gImpzb24iCiAgICAgICAgc2VsZi5yak9iai5tYWluKCkKICAgICAgICBw
      cmludCgiXG5cblNoZWxsIE91dHB1dCIpCiAgICAgICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5m
      b3JtYXQgPSAiYmFzaCIKICAgICAgICBzZWxmLnJqT2JqLm1haW4oKQogICAgICAgIHByaW50KCJc
      blxuTm9uIGNvbXBhdGlibGUgb3V0cHV0ICgtLWFiY2QpIikKICAgICAgICB0cnk6CiAgICAgICAg
      ICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIuZm9ybWF0ID0gJ2FiY2QnCiAgICAgICAgICAgIHNl
      bGYucmpPYmoubWFpbigpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiRnVuY3Rpb24gc2hvdWxkIGhh
      dmUgdGhyb3duIGFuIEV4Y2VwdGlvbiIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVF
      eGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiRXhjZXB0aW9uIHRocm93biBzdWNj
      ZXNzZnVsbHk6IHt9Ii5mb3JtYXQoZXJyKSkKCiAgICBkZWYgdGVzdF9tZXRob2RfY3JlYXRlX2Nl
      cGhDU0lLZXlyaW5nX2NlcGhGU1Byb3Zpc2lvbmVyKHNlbGYpOgogICAgICAgIGNzaUtleXJpbmcg
      PSBzZWxmLnJqT2JqLmNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBoRlNQcm92aXNpb25lcigpCiAg
      ICAgICAgcHJpbnQoInt9Ii5mb3JtYXQoY3NpS2V5cmluZykpCgogICAgZGVmIHRlc3Rfbm9uX3pl
      cm9fcmV0dXJuX2FuZF9lcnJvcihzZWxmKToKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIucmV0
      dXJuX3ZhbCA9IDEKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIuZXJyX21lc3NhZ2UgPSAiRHVt
      bXkgRXJyb3IiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLmNyZWF0ZV9jaGVj
      a2VyS2V5KCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJGYWlsZWQgdG8gcmFpc2UgYW4gZXhjZXB0
      aW9uLCAnRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiciKQogICAgICAgIGV4Y2VwdCBFeGVjdXRp
      b25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3NmdWxs
      eSB0aHJvd24gZXJyb3IuXG5FcnJvcjoge30iLmZvcm1hdChlcnIpKQoKICAgIGRlZiB0ZXN0X211
      bHRpX2ZpbGVzeXN0ZW1fc2NlbmFyaW8oc2VsZik6CiAgICAgICAgY21kX2tleSA9IHNlbGYucmpP
      YmouY2x1c3Rlci5jbWRfbmFtZXNbJ2ZzIGxzJ10KICAgICAgICBjbWRfb3V0ID0gc2VsZi5yak9i
      ai5jbHVzdGVyLmNtZF9vdXRwdXRfbWFwW2NtZF9rZXldCiAgICAgICAgY21kX2pzb25fb3V0ID0g
      anNvbi5sb2FkcyhjbWRfb3V0KQogICAgICAgIHNlY29uZF9mc19kZXRhaWxzID0gZGljdChjbWRf
      anNvbl9vdXRbMF0pCiAgICAgICAgc2Vjb25kX2ZzX2RldGFpbHNbJ25hbWUnXSArPSAnLTInCiAg
      ICAgICAgY21kX2pzb25fb3V0LmFwcGVuZChzZWNvbmRfZnNfZGV0YWlscykKICAgICAgICBzZWxm
      LnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9tYXBbY21kX2tleV0gPSBqc29uLmR1bXBzKGNtZF9q
      c29uX291dCkKICAgICAgICAjIG11bHRpcGxlIGZpbGVzeXN0ZW0gcHJlc2VudCwKICAgICAgICAj
      IGJ1dCBubyBzcGVjaWZpYyAnLS1jZXBoZnMtZmlsZXN5c3RlbS1uYW1lJyBhcmd1bWVudCBwcm92
      aWRlZAogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2RhdGFf
      cG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4
      cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNl
      cHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJv
      cjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgcGFzcyBhbiBleGlzdGluZyBmaWxlc3lzdGVt
      IG5hbWUKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIuY2Vw
      aGZzX2ZpbGVzeXN0ZW1fbmFtZSA9IHNlY29uZF9mc19kZXRhaWxzWyduYW1lJ10KICAgICAgICAg
      ICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICBleGNl
      cHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHNlbGYuZmFp
      bCgiU2hvdWxkIG5vdCBoYXZlIHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAg
      ICMgcGFzcyBhIG5vbi1leGlzdGluZyBmaWxlc3lzdGVtIG5hbWUKICAgICAgICB0cnk6CiAgICAg
      ICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSArPSAi
      LW5vbi1leGlzdGluZy1mcy1uYW1lIgogICAgICAgICAgICBzZWxmLnJqT2JqLmdldF9jZXBoZnNf
      ZGF0YV9wb29sX2RldGFpbHMoKQogICAgICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3
      YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVy
      ZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3du
      IGVycm9yOiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAgIyBlbXB0eSBmaWxlLXN5c3RlbSBhcnJh
      eQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5jbHVzdGVyLmNtZF9vdXRwdXRf
      bWFwW2NtZF9rZXldID0ganNvbi5kdW1wcyhbXSkKICAgICAgICAgICAgc2VsZi5yak9iai5nZXRf
      Y2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNl
      cHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlv
      bkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5
      IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQoKICAgIGRlZiB0ZXN0X211bHRpX2RhdGFf
      cG9vbF9zY2VuYXJpbyhzZWxmKToKICAgICAgICBjbWRfa2V5ID0gc2VsZi5yak9iai5jbHVzdGVy
      LmNtZF9uYW1lc1snZnMgbHMnXQogICAgICAgIGNtZF9vdXQgPSBzZWxmLnJqT2JqLmNsdXN0ZXIu
      Y21kX291dHB1dF9tYXBbY21kX2tleV0KICAgICAgICBjbWRfanNvbl9vdXQgPSBqc29uLmxvYWRz
      KGNtZF9vdXQpCiAgICAgICAgZmlyc3RfZnNfZGV0YWlscyA9IGNtZF9qc29uX291dFswXQogICAg
      ICAgIG5ld19kYXRhX3Bvb2xfbmFtZSA9ICdteWZzLWRhdGExJwogICAgICAgIGZpcnN0X2ZzX2Rl
      dGFpbHNbJ2RhdGFfcG9vbHMnXS5hcHBlbmQobmV3X2RhdGFfcG9vbF9uYW1lKQogICAgICAgIHBy
      aW50KCJNb2RpZmllZCBKU09OIENtZCBPdXQ6IHt9Ii5mb3JtYXQoY21kX2pzb25fb3V0KSkKICAg
      ICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9IG5ld19k
      YXRhX3Bvb2xfbmFtZQogICAgICAgIHNlbGYucmpPYmouY2x1c3Rlci5jbWRfb3V0cHV0X21hcFtj
      bWRfa2V5XSA9IGpzb24uZHVtcHMoY21kX2pzb25fb3V0KQogICAgICAgIHNlbGYucmpPYmouZ2V0
      X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgIyB1c2UgYSBub24tZXhpc3Rpbmcg
      ZGF0YS1wb29sLW5hbWUKICAgICAgICBiYWRfZGF0YV9wb29sX25hbWUgPSAnbXlmcy1kYXRhMycK
      ICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9IGJh
      ZF9kYXRhX3Bvb2xfbmFtZQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5nZXRf
      Y2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNl
      cHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlv
      bkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5
      IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgZW1wdHkgZGF0YS1wb29s
      IHNjZW5hcmlvCiAgICAgICAgZmlyc3RfZnNfZGV0YWlsc1snZGF0YV9wb29scyddID0gW10KICAg
      ICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9tYXBbY21kX2tleV0gPSBqc29uLmR1
      bXBzKGNtZF9qc29uX291dCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouZ2V0
      X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4gRXhj
      ZXB0aW9uIHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4Y2VwdCBFeGVjdXRp
      b25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3NmdWxs
      eSB0aHJvd24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKCiAgICBkZWYgdGVzdF92YWxpZF9yZ3df
      ZW5kcG9pbnQoc2VsZik6CiAgICAgICAgc2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgiMTAu
      MTAuMjEyLjEzMzo4MDAwIikKICAgICAgICAjIGludmFsaWQgcG9ydAogICAgICAgIHRyeToKICAg
      ICAgICAgICAgc2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgiMTAuMTAuMjEyLjEzMzoyMzgw
      MDAiKQogICAgICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8g
      YmUgdGhyb3duIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBl
      cnI6CiAgICAgICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9y
      bWF0KGVycikpCiAgICAgICAgIyBvdXQgb2YgcmFuZ2UgSVAKICAgICAgICB0cnk6CiAgICAgICAg
      ICAgIHNlbGYucmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEwLjEwMzMuMjEyLjEzMzo4MDAwIikK
      ICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRo
      cm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgog
      ICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvcjoge30iLmZvcm1hdChl
      cnIpKQogICAgICAgICMgbWFsIGZvcm1hdHRlZCBJUAogICAgICAgIHRyeToKICAgICAgICAgICAg
      c2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgiMTAuMTAzLi4yMTIuMTMzOjgwMDAiKQogICAg
      ICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3du
      IikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAg
      ICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikp
      CiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLl9pbnZhbGlkX2VuZHBvaW50KCIx
      MC4xMDMuMjEyLjEzMzo6ODAwMCIpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4gRXhjZXB0aW9u
      IHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4Y2VwdCBFeGVjdXRpb25GYWls
      dXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3NmdWxseSB0aHJv
      d24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYu
      cmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEwLjEwLjEwMy4yMTIuMTMzOjgwMDAiKQogICAgICAg
      ICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikK
      ICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAg
      ICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCg==
    external.features.ocs.openshift.io/validation: '{"secrets":["rook-ceph-operator-creds",
      "rook-csi-rbd-node", "rook-csi-rbd-provisioner"], "configMaps": ["rook-ceph-mon-endpoints",
      "rook-ceph-mon"], "storageClasses": ["ceph-rbd"]}'
    features.ocs.openshift.io/enabled: '["external"]'
    olm.skipRange: '>=4.2.0 <4.5.2'
    operatorframework.io/cluster-monitoring: "true"
    operatorframework.io/suggested-namespace: openshift-storage
    operators.operatorframework.io/internal-objects: '["cephclusters.ceph.rook.io",
      "cephblockpools.ceph.rook.io", "cephobjectstores.ceph.rook.io", "cephobjectstoreusers.ceph.rook.io",
      "cephnfses.ceph.rook.io","cephclients.ceph.rook.io", "noobaas.noobaa.io", "objectbuckets.objectbucket.io","objectbucketclaims.objectbucket.io","ocsinitializations.ocs.openshift.io",
      "storageclusterinitializations.ocs.openshift.io", "cephfilesystems.ceph.rook.io"]'
    repository: https://github.com/openshift/ocs-operator
    support: Red Hat
  name: ocs-operator.v4.5.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: OCS Initialization represents the initial data to be created when
        the OCS operator is installed.
      displayName: OCS Initialization
      kind: OCSInitialization
      name: ocsinitializations.ocs.openshift.io
      version: v1
    - description: StorageCluster Initialization represents a set of tasks the OCS
        operator wants to implement for every StorageCluster it encounters.
      displayName: StorageCluster Initialization
      kind: StorageClusterInitialization
      name: storageclusterinitializations.ocs.openshift.io
      version: v1
    - description: Storage Cluster represents a OpenShift Container Storage Cluster
        including Ceph Cluster, NooBaa and all the storage and compute resources required.
      displayName: Storage Cluster
      kind: StorageCluster
      name: storageclusters.ocs.openshift.io
      resources:
      - kind: CephCluster
        name: cephclusters.ceph.rook.io
        version: v1
      - kind: NooBaa
        name: noobaas.noobaa.io
        version: v1alpha1
      version: v1
    - description: Represents a Ceph cluster.
      displayName: Ceph Cluster
      kind: CephCluster
      name: cephclusters.ceph.rook.io
      version: v1
    - description: Represents a Ceph Block Pool.
      displayName: Ceph Block Pool
      kind: CephBlockPool
      name: cephblockpools.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store.
      displayName: Ceph Object Store
      kind: CephObjectStore
      name: cephobjectstores.ceph.rook.io
      specDescriptors:
      - description: Coding Chunks
        displayName: Coding Chunks
        path: dataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: dataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: dataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: dataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Annotations
        displayName: Annotations
        path: gateway.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:annotations
      - description: Instances
        displayName: Instances
        path: gateway.instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resources
        displayName: Resources
        path: gateway.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: placement
        displayName: placement
        path: gateway.placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:placement
      - description: securePort
        displayName: securePort
        path: gateway.securePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:securePort
      - description: sslCertificateRef
        displayName: sslCertificateRef
        path: gateway.sslCertificateRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:sslCertificateRef
      - description: Type
        displayName: Type
        path: gateway.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Coding Chunks
        displayName: Coding Chunks
        path: metadataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: metadataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: metadataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: metadataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      version: v1
    - description: Represents a Ceph Object Store User.
      displayName: Ceph Object Store User
      kind: CephObjectStoreUser
      name: cephobjectstoreusers.ceph.rook.io
      version: v1
    - description: Represents a cluster of Ceph NFS ganesha gateways.
      displayName: Ceph NFS
      kind: CephNFS
      name: cephnfses.ceph.rook.io
      version: v1
    - description: Represents a Ceph User.
      displayName: Ceph Client
      kind: CephClient
      name: cephclients.ceph.rook.io
      version: v1
    - description: Represents a Ceph Filesystem.
      displayName: Ceph Filesystem
      kind: CephFilesystem
      name: cephfilesystems.ceph.rook.io
      version: v1
    - description: A NooBaa system - Create this to start
      displayName: NooBaa
      kind: NooBaa
      name: noobaas.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: DBImage (optional) overrides the default image for the db container.
        displayName: DB Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image (optional) overrides the default image for the server container.
        displayName: Image
        path: dbImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: CoreResources (optional) overrides the default resource requirements
          for the server container.
        displayName: Core Resources
        path: coreResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBResources (optional) overrides the default resource requirements
          for the db container.
        displayName: DB Resources
        path: dbResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: 'DBVolumeResources (optional) overrides the default PVC resource
          requirements for the database volume. For the time being this field is immutable
          and can only be set on system creation. This is because volume size updates
          are only supported for increasing the size, and only if the storage class
          specifies `allowVolumeExpansion: true`, +immutable.'
        displayName: Image
        path: dbVolumeResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBStorageClass (optional) overrides the default cluster StorageClass
          for the database volume. For the time being this field is immutable and
          can only be set on system creation. This affects where the system stores
          its database which contains system config, buckets, objects meta-data and
          mapping file parts to storage locations. +immutable.
        displayName: DB StorageClass
        path: dbStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: PVPoolDefaultStorageClass (optional) overrides the default cluster
          StorageClass for the pv-pool volumes. This affects where the system stores
          data chunks (encrypted). Updates to this field will only affect new pv-pools,
          but updates to existing pools are not supported by the operator.
        displayName: PV Pool DefaultStorageClass
        path: pvPoolDefaultStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: ImagePullSecret (optional) sets a pull secret for the system
          image.
        displayName: Image Pull Secret
        path: imagePullSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      version: v1alpha1
    - description: Storage target spec such as aws-s3, s3-compatible, ibm-cos, PV's
        and more. Used in BacketClass to construct data placement policies.
      displayName: Backing Store
      kind: BackingStore
      name: backingstores.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: Region is the AWS region.
        displayName: Region
        path: awsS3.region
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: awsS3.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SSLDisabled allows to disable SSL and use plain http.
        displayName: SSL Disabled
        path: awsS3.sslDisabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: awsS3.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |2-
           Secret refers to a secret that provides the credentials. The secret should define AccountName and AccountKey as provided
          by Azure Blob.
        displayName: Secret
        path: azureBlob.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBlobContainer is the name of the target Azure Blob container.
        displayName: Target Blob Container
        path: azureBlob.targetBlobContainer
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Secret refers to a secret that provides the credentials. The secret should define GoogleServiceAccountPrivateKeyJson containing
          the entire json string as provided by Google.
        displayName: Secret
        path: googleCloudStorage.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: googleCloudStorage.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: NumVolumes is the number of volumes to allocate.
        displayName: Num Volumes
        path: pvPool.numVolumes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: VolumeResources represents the minimum resources each volume
          should have.
        displayName: Resources
        path: pvPool.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: StorageClass is the name of the storage class to use for the
          PV's.
        displayName: Storage Class
        path: pvPool.storageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port.'
        displayName: End Point
        path: s3Compatible.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: s3Compatible.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use
          when signing requests.
        displayName: Signature Version
        path: s3Compatible.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: s3Compatible.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the IBM COS endpoint: http(s)://host:port.'
        displayName: End Point
        path: IBMCos.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: IBMCos.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use
          when signing requests.
        displayName: Signature Version
        path: IBMCos.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target IBM COS bucket.
        displayName: Target Bucket
        path: IBMCos.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Storage policy spec  tiering, mirroring, spreading. Combines BackingStores.
        Referenced by ObjectBucketClaims.
      displayName: Bucket Class
      kind: BucketClass
      name: bucketclasses.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: BackingStores is an unordered list of backing store names. The
          meaning of the list depends on the placement.
        displayName: Backing Stores
        path: placementPolicy.tiers[0].backingStores[0]
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Placement specifies the type of placement for the tier If empty
          it should have a single backing store.
        displayName: Placement
        path: placementPolicy.tiers[0].placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Claim a bucket just like claiming a PV. Automate you app bucket
        provisioning by creating OBC with your app deployment. A secret and configmap
        (name=claim) will be created with access details for the app pods.
      displayName: Object Bucket Claim
      kind: ObjectBucketClaim
      name: objectbucketclaims.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
    - description: Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning
        information.
      displayName: Object Bucket
      kind: ObjectBucket
      name: objectbuckets.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
  description: |2

    **Red Hat OpenShift Container Storage** deploys three operators.

    ### OpenShift Container Storage operator

    The OpenShift Container Storage operator is the primary operator for OpenShift Container Storage. It serves to facilitate the other operators in OpenShift Container Storage by performing administrative tasks outside their scope as well as watching and configuring their CustomResources.

    ### Rook

    [Rook][1] deploys and manages Ceph on OpenShift, which provides block and file storage.

    ### NooBaa operator

    The NooBaa operator deploys and manages the [NooBaa][2] Multi-Cloud Gateway on OpenShift, which provides object storage.

    # Core Capabilities

    * **Self-managing service:** No matter which supported storage technologies you choose, OpenShift Container Storage ensures that resources can be deployed and managed automatically.

    * **Hyper-scale or hyper-converged:** With OpenShift Container Storage you can either build dedicated storage clusters or hyper-converged clusters where your apps run alongside storage.

    * **File, Block, and Object provided by OpenShift Container Storage:** OpenShift Container Storage integrates Ceph with multiple storage presentations including object storage (compatible with S3), block storage, and POSIX-compliant shared file system.

    * **Your data, protected:** OpenShift Container Storage efficiently distributes and replicates your data across your cluster to minimize the risk of data loss. With snapshots, cloning, and versioning, no more losing sleep over your data.

    * **Elastic storage in your datacenter:** Scale is now possible in your datacenter. Get started with a few terabytes, and easily scale up.

    * **Simplified data management:** Easily create hybrid and multi-cloud data storage for your workloads, using a single namespace.

    [1]: https://rook.io
    [2]: https://noobaa.io
  displayName: OpenShift Container Storage
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - nodes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - list
          - watch
          - create
        - apiGroups:
          - ocs.openshift.io
          resources:
          - '*'
          - storageclusters
          - ocsinitialization
          - storageclusterinitializations
          verbs:
          - '*'
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephblockpools
          - cephfilesystems
          - cephobjectstores
          - cephobjectstoreusers
          verbs:
          - '*'
        - apiGroups:
          - noobaa.io
          resources:
          - noobaas
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - template.openshift.io
          resources:
          - templates
          verbs:
          - '*'
        serviceAccountName: ocs-operator
      - rules: []
        serviceAccountName: rook-ceph-cluster-mgmt
      - rules:
        - apiGroups:
          - ""
          - apps
          - extensions
          resources:
          - secrets
          - pods
          - pods/log
          - services
          - configmaps
          - deployments
          - daemonsets
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-system
      - rules: []
        serviceAccountName: rook-ceph-global
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - nodes
          - nodes/proxy
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          - persistentvolumes
          - persistentvolumeclaims
          - endpoints
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - policy
          - apps
          - extensions
          resources:
          - poddisruptionbudgets
          - deployments
          - replicasets
          verbs:
          - '*'
        - apiGroups:
          - healthchecking.openshift.io
          resources:
          - machinedisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - machine.openshift.io
          resources:
          - machines
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - csidrivers
          verbs:
          - create
          - delete
          - get
          - update
        serviceAccountName: rook-ceph-system
      - rules: []
        serviceAccountName: rook-ceph-mgr-cluster
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - nodes
          - nodes/proxy
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - list
          - get
          - watch
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          verbs:
          - '*'
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
        serviceAccountName: rook-ceph-osd
      - rules: []
        serviceAccountName: rook-ceph-mgr-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        serviceAccountName: rook-ceph-mgr
      - rules: []
        serviceAccountName: cephfs-csi-nodeplugin
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rook-csi-cephfs-plugin-sa
      - rules: []
        serviceAccountName: cephfs-external-provisioner-runner
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules: []
        serviceAccountName: rbd-csi-nodeplugin
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rook-csi-rbd-plugin-sa
      - rules: []
        serviceAccountName: rbd-external-provisioner-runner
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - delete
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - list
          - watch
          - delete
          - get
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots/status
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: noobaa
      deployments:
      - name: ocs-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: ocs-operator
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                name: ocs-operator
            spec:
              containers:
              - command:
                - ocs-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: ocs-operator
                - name: ROOK_CEPH_IMAGE
                  value: registry.redhat.io/ocs4/rook-ceph-rhel8-operator@sha256:82db76aa07847d7fb5993af515cfaaffb803876b8a7869f85a27260a9edf7fb8
                - name: CEPH_IMAGE
                  value: registry.redhat.io/rhceph/rhceph-4-rhel8@sha256:eafd1acb0ada5d7cf93699056118aca19ed7a22e4938411d307ef94048746cc8
                - name: NOOBAA_CORE_IMAGE
                  value: registry.redhat.io/ocs4/mcg-core-rhel8@sha256:f46d403f5998db3d8fb56db194fdae0d9a9a0eb35eedaa61a68ea21002249755
                - name: NOOBAA_DB_IMAGE
                  value: registry.redhat.io/rhscl/mongodb-36-rhel7@sha256:6abfa44b8b4d7b45d83b1158865194cb64481148701977167e900e5db4e1eba3
                image: registry.redhat.io/ocs4/ocs-rhel8-operator@sha256:b76d2713240e5f757bea5f3d30bb630b6eb75162f6d70a8d4a969a20472ee130
                imagePullPolicy: Always
                name: ocs-operator
                ports:
                - containerPort: 60000
                  name: metrics
                readinessProbe:
                  exec:
                    command:
                    - stat
                    - /tmp/operator-sdk-ready
                  failureThreshold: 1
                  initialDelaySeconds: 4
                  periodSeconds: 10
                resources: {}
              serviceAccountName: ocs-operator
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      - name: rook-ceph-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: rook-ceph-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: rook-ceph-operator
            spec:
              containers:
              - args:
                - ceph
                - operator
                env:
                - name: ROOK_CURRENT_NAMESPACE_ONLY
                  value: "true"
                - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
                  value: "false"
                - name: ROOK_LOG_LEVEL
                  value: INFO
                - name: ROOK_CEPH_STATUS_CHECK_INTERVAL
                  value: 60s
                - name: ROOK_MON_HEALTHCHECK_INTERVAL
                  value: 45s
                - name: ROOK_MON_OUT_TIMEOUT
                  value: 600s
                - name: ROOK_DISCOVER_DEVICES_INTERVAL
                  value: 60m
                - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
                  value: "true"
                - name: ROOK_ENABLE_SELINUX_RELABELING
                  value: "true"
                - name: ROOK_ENABLE_FSGROUP
                  value: "true"
                - name: ROOK_ENABLE_FLEX_DRIVER
                  value: "false"
                - name: ROOK_ENABLE_DISCOVERY_DAEMON
                  value: "false"
                - name: ROOK_ENABLE_MACHINE_DISRUPTION_BUDGET
                  value: "false"
                - name: ROOK_DISABLE_DEVICE_HOTPLUG
                  value: "true"
                - name: ROOK_CSI_ALLOW_UNSUPPORTED_VERSION
                  value: "true"
                - name: CSI_PROVISIONER_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: CSI_PLUGIN_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CSI_ENABLE_SNAPSHOTTER
                  value: "false"
                - name: ROOK_OBC_WATCH_OPERATOR_NAMESPACE
                  value: "true"
                - name: ROOK_CSI_CEPH_IMAGE
                  value: registry.redhat.io/ocs4/cephcsi-rhel8@sha256:09ca8922c6e741aeebb8ecbb6260987b751634ee1ac8846ce67207b64dd11d41
                - name: ROOK_CSI_REGISTRAR_IMAGE
                  value: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:48b5a3678e341b3bf2ad6846f6c843b4021e2815cc119bfba952c4c7414a015b
                - name: ROOK_CSI_RESIZER_IMAGE
                  value: registry.redhat.io/openshift4/ose-csi-external-resizer-rhel7@sha256:753ba494bb3021e5d4e4d0b6f4b86435257bbc2ebb581052311a3e68f7ecf881
                - name: ROOK_CSI_PROVISIONER_IMAGE
                  value: registry.redhat.io/openshift4/ose-csi-external-provisioner-rhel7@sha256:656c3c04e122129d15fb63b3cb66e959daa3b224efcdebbd9cb5fde511798bea
                - name: ROOK_CSI_ATTACHER_IMAGE
                  value: registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:583d4964b7c5aca68e7723b2f2272d8e023626203564148dd109699a2a6da158
                image: registry.redhat.io/ocs4/rook-ceph-rhel8-operator@sha256:82db76aa07847d7fb5993af515cfaaffb803876b8a7869f85a27260a9edf7fb8
                name: rook-ceph-operator
                resources: {}
                volumeMounts:
                - mountPath: /var/lib/rook
                  name: rook-config
                - mountPath: /etc/ceph
                  name: default-config-dir
              serviceAccountName: rook-ceph-system
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
              volumes:
              - emptyDir: {}
                name: rook-config
              - emptyDir: {}
                name: default-config-dir
      - name: noobaa-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              noobaa-operator: deployment
          strategy: {}
          template:
            metadata:
              labels:
                app: noobaa
                noobaa-operator: deployment
            spec:
              containers:
              - env:
                - name: OPERATOR_NAME
                  value: noobaa-operator
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NOOBAA_CORE_IMAGE
                  value: registry.redhat.io/ocs4/mcg-core-rhel8@sha256:f46d403f5998db3d8fb56db194fdae0d9a9a0eb35eedaa61a68ea21002249755
                - name: NOOBAA_DB_IMAGE
                  value: registry.redhat.io/rhscl/mongodb-36-rhel7@sha256:6abfa44b8b4d7b45d83b1158865194cb64481148701977167e900e5db4e1eba3
                image: registry.redhat.io/ocs4/mcg-rhel8-operator@sha256:65ad2a94d960065d6531dfbeef027b7be23414477d402a326dac64f53eec9c61
                name: noobaa-operator
                resources:
                  limits:
                    cpu: 250m
                    memory: 512Mi
              serviceAccountName: noobaa
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          - services
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - apps
          - extensions
          resources:
          - daemonsets
          - statefulsets
          - deployments
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - k8s.cni.cncf.io
          resources:
          - network-attachment-definitions
          verbs:
          - get
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephclusters/finalizers
          verbs:
          - get
          - list
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-osd
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - pods/log
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-cmd-reporter
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          - prometheusrules
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resourceNames:
          - noobaa-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - cloudcredential.openshift.io
          resources:
          - credentialsrequests
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstores
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstoreusers
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - get
          - create
          - update
          - patch
          - list
          - watch
        serviceAccountName: noobaa
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - storage
  - rook
  - ceph
  - noobaa
  - block storage
  - shared filesystem
  - object storage
  links:
  - name: Source Code
    url: https://github.com/openshift/ocs-operator
  maintainers:
  - email: ocs-support@redhat.com
    name: Red Hat Support
  maturity: alpha
  provider:
    name: Red Hat
  relatedImages:
  - image: registry.redhat.io/ocs4/rook-ceph-rhel8-operator@sha256:82db76aa07847d7fb5993af515cfaaffb803876b8a7869f85a27260a9edf7fb8
    name: rook-container
  - image: registry.redhat.io/ocs4/cephcsi-rhel8@sha256:09ca8922c6e741aeebb8ecbb6260987b751634ee1ac8846ce67207b64dd11d41
    name: rook-csi
  - image: registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:48b5a3678e341b3bf2ad6846f6c843b4021e2815cc119bfba952c4c7414a015b
    name: rook-csi-registrar
  - image: registry.redhat.io/openshift4/ose-csi-external-resizer-rhel7@sha256:753ba494bb3021e5d4e4d0b6f4b86435257bbc2ebb581052311a3e68f7ecf881
    name: rook-csi-resizer
  - image: registry.redhat.io/openshift4/ose-csi-external-provisioner-rhel7@sha256:656c3c04e122129d15fb63b3cb66e959daa3b224efcdebbd9cb5fde511798bea
    name: rook-csi-provisioner
  - image: registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:583d4964b7c5aca68e7723b2f2272d8e023626203564148dd109699a2a6da158
    name: rook-csi-attacher
  - image: registry.redhat.io/rhceph/rhceph-4-rhel8@sha256:eafd1acb0ada5d7cf93699056118aca19ed7a22e4938411d307ef94048746cc8
    name: ceph-container
  - image: registry.redhat.io/ocs4/mcg-rhel8-operator@sha256:65ad2a94d960065d6531dfbeef027b7be23414477d402a326dac64f53eec9c61
    name: noobaa-operator
  - image: registry.redhat.io/ocs4/mcg-core-rhel8@sha256:f46d403f5998db3d8fb56db194fdae0d9a9a0eb35eedaa61a68ea21002249755
    name: noobaa-core
  - image: registry.redhat.io/rhscl/mongodb-36-rhel7@sha256:6abfa44b8b4d7b45d83b1158865194cb64481148701977167e900e5db4e1eba3
    name: noobaa-db
  - image: registry.redhat.io/ocs4/ocs-must-gather-rhel8@sha256:9afe1f954afe22e0ace3b72edd856afdacc586a3c520281321cf3ac1eb097076
    name: ocs-must-gather
  version: 4.5.2
